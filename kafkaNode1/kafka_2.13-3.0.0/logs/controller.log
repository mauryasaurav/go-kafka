[2022-03-16 15:00:06,343] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:01:26,037] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-16 15:01:26,056] INFO [Controller id=1] 1 successfully elected as the controller. Epoch incremented to 2 and epoch zk version is now 2 (kafka.controller.KafkaController)
[2022-03-16 15:01:26,059] INFO [Controller id=1] Registering handlers (kafka.controller.KafkaController)
[2022-03-16 15:01:26,065] INFO [Controller id=1] Deleting log dir event notifications (kafka.controller.KafkaController)
[2022-03-16 15:01:26,070] INFO [Controller id=1] Deleting isr change notifications (kafka.controller.KafkaController)
[2022-03-16 15:01:26,073] INFO [Controller id=1] Initializing controller context (kafka.controller.KafkaController)
[2022-03-16 15:01:26,088] INFO [Controller id=1] Initialized broker epochs cache: HashMap(1 -> 73) (kafka.controller.KafkaController)
[2022-03-16 15:01:26,102] DEBUG [Controller id=1] Register BrokerModifications handler for Set(1) (kafka.controller.KafkaController)
[2022-03-16 15:01:26,124] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 1 (kafka.controller.ControllerChannelManager)
[2022-03-16 15:01:26,143] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-03-16 15:01:26,145] INFO [Controller id=1] Currently active brokers in the cluster: Set(1) (kafka.controller.KafkaController)
[2022-03-16 15:01:26,146] INFO [Controller id=1] Currently shutting brokers in the cluster: HashSet() (kafka.controller.KafkaController)
[2022-03-16 15:01:26,146] INFO [Controller id=1] Current list of topics in the cluster: HashSet(first_topic) (kafka.controller.KafkaController)
[2022-03-16 15:01:26,146] INFO [Controller id=1] Fetching topic deletions in progress (kafka.controller.KafkaController)
[2022-03-16 15:01:26,151] INFO [Controller id=1] List of topics to be deleted:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,151] INFO [Controller id=1] List of topics ineligible for deletion:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,151] INFO [Controller id=1] Initializing topic deletion manager (kafka.controller.KafkaController)
[2022-03-16 15:01:26,152] INFO [Topic Deletion Manager 1] Initializing manager with initial deletions: Set(), initial ineligible deletions: HashSet() (kafka.controller.TopicDeletionManager)
[2022-03-16 15:01:26,153] INFO [Controller id=1] Sending update metadata request (kafka.controller.KafkaController)
[2022-03-16 15:01:26,164] INFO [ReplicaStateMachine controllerId=1] Initializing replica state (kafka.controller.ZkReplicaStateMachine)
[2022-03-16 15:01:26,169] INFO [ReplicaStateMachine controllerId=1] Triggering online replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-16 15:01:26,170] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:01:26,192] INFO [ReplicaStateMachine controllerId=1] Triggering offline replica state changes (kafka.controller.ZkReplicaStateMachine)
[2022-03-16 15:01:26,193] DEBUG [ReplicaStateMachine controllerId=1] Started replica state machine with initial state -> HashMap([Topic=first_topic,Partition=1,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=0,Replica=1] -> OnlineReplica, [Topic=first_topic,Partition=2,Replica=1] -> OnlineReplica) (kafka.controller.ZkReplicaStateMachine)
[2022-03-16 15:01:26,194] INFO [PartitionStateMachine controllerId=1] Initializing partition state (kafka.controller.ZkPartitionStateMachine)
[2022-03-16 15:01:26,198] INFO [PartitionStateMachine controllerId=1] Triggering online partition state changes (kafka.controller.ZkPartitionStateMachine)
[2022-03-16 15:01:26,200] DEBUG [PartitionStateMachine controllerId=1] Started partition state machine with initial state -> HashMap(first_topic-0 -> OnlinePartition, first_topic-1 -> OnlinePartition, first_topic-2 -> OnlinePartition) (kafka.controller.ZkPartitionStateMachine)
[2022-03-16 15:01:26,201] INFO [Controller id=1] Ready to serve as the new controller with epoch 2 (kafka.controller.KafkaController)
[2022-03-16 15:01:26,209] INFO [Controller id=1] Partitions undergoing preferred replica election:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,209] INFO [Controller id=1] Partitions that completed preferred replica election:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,210] INFO [Controller id=1] Skipping preferred replica election for partitions due to topic deletion:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,210] INFO [Controller id=1] Resuming preferred replica election for partitions:  (kafka.controller.KafkaController)
[2022-03-16 15:01:26,211] INFO [Controller id=1] Starting replica leader election (PREFERRED) for partitions  triggered by ZkTriggered (kafka.controller.KafkaController)
[2022-03-16 15:01:26,227] INFO [Controller id=1] Starting the controller scheduler (kafka.controller.KafkaController)
[2022-03-16 15:01:31,229] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:01:31,230] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:01:31,234] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 Map() (kafka.controller.KafkaController)
[2022-03-16 15:01:31,235] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:02:35,584] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-03-16 15:02:35,584] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-03-16 15:02:35,587] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-03-16 15:02:35,588] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-03-16 15:02:35,590] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:02:35,592] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-03-16 15:02:35,593] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 73, 2 -> 91) (kafka.controller.KafkaController)
[2022-03-16 15:02:42,838] INFO [Controller id=1] Shutting down broker 2 (kafka.controller.KafkaController)
[2022-03-16 15:02:42,839] DEBUG [Controller id=1] All shutting down brokers: 2 (kafka.controller.KafkaController)
[2022-03-16 15:02:42,839] DEBUG [Controller id=1] Live brokers: 1 (kafka.controller.KafkaController)
[2022-03-16 15:02:42,842] TRACE [Controller id=1] All leaders = first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),first_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1) (kafka.controller.KafkaController)
[2022-03-16 15:02:44,193] INFO [Controller id=1] Newly added brokers: , deleted brokers: 2, bounced brokers: , all live brokers: 1 (kafka.controller.KafkaController)
[2022-03-16 15:02:44,194] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-03-16 15:02:44,194] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-03-16 15:02:44,194] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-03-16 15:02:44,198] INFO [Controller id=1] Broker failure callback for 2 (kafka.controller.KafkaController)
[2022-03-16 15:02:44,199] INFO [Controller id=1] Removed 2 from list of shutting down brokers. (kafka.controller.KafkaController)
[2022-03-16 15:02:44,200] DEBUG [Controller id=1] Unregister BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-03-16 15:02:44,200] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 73) (kafka.controller.KafkaController)
[2022-03-16 15:03:22,498] INFO [Controller id=1] Newly added brokers: 2, deleted brokers: , bounced brokers: , all live brokers: 1,2 (kafka.controller.KafkaController)
[2022-03-16 15:03:22,498] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 2 (kafka.controller.ControllerChannelManager)
[2022-03-16 15:03:22,501] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-03-16 15:03:22,501] INFO [Controller id=1] New broker startup callback for 2 (kafka.controller.KafkaController)
[2022-03-16 15:03:22,503] DEBUG [Controller id=1] Register BrokerModifications handler for List(2) (kafka.controller.KafkaController)
[2022-03-16 15:03:22,504] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:03:22,504] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 73, 2 -> 108) (kafka.controller.KafkaController)
[2022-03-16 15:03:51,023] INFO [Controller id=1] Newly added brokers: 3, deleted brokers: , bounced brokers: , all live brokers: 1,2,3 (kafka.controller.KafkaController)
[2022-03-16 15:03:51,023] DEBUG [Channel manager on controller 1]: Controller 1 trying to connect to broker 3 (kafka.controller.ControllerChannelManager)
[2022-03-16 15:03:51,026] INFO [RequestSendThread controllerId=1] Starting (kafka.controller.RequestSendThread)
[2022-03-16 15:03:51,027] INFO [Controller id=1] New broker startup callback for 3 (kafka.controller.KafkaController)
[2022-03-16 15:03:51,028] DEBUG [Controller id=1] Register BrokerModifications handler for List(3) (kafka.controller.KafkaController)
[2022-03-16 15:03:51,028] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:03:51,031] INFO [Controller id=1] Updated broker epochs cache: HashMap(1 -> 73, 2 -> 108, 3 -> 124) (kafka.controller.KafkaController)
[2022-03-16 15:05:48,582] INFO [Controller id=1] New topics: [Set(third_topic)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(third_topic,Some(pYALopMDT1GMCan7Fm73yw),Map(third_topic-0 -> ReplicaAssignment(replicas=2,3,1, addingReplicas=, removingReplicas=), third_topic-1 -> ReplicaAssignment(replicas=3,1,2, addingReplicas=, removingReplicas=), third_topic-2 -> ReplicaAssignment(replicas=1,2,3, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-16 15:05:48,583] INFO [Controller id=1] New partition creation callback for third_topic-0,third_topic-1,third_topic-2 (kafka.controller.KafkaController)
[2022-03-16 15:06:31,236] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:06:31,236] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:06:31,238] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:10:14,648] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:10:19,792] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:10:27,314] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:11:31,242] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:11:31,244] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:11:31,246] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:11:31,247] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:11:31,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:11:31,247] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:11:31,247] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:11:31,247] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:12:35,676] INFO [Controller id=1] New topics: [Set(message-log)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(message-log,Some(y5gE_7czQRexvSqveLYsDA),Map(message-log-0 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-16 15:12:35,677] INFO [Controller id=1] New partition creation callback for message-log-0 (kafka.controller.KafkaController)
[2022-03-16 15:12:35,700] INFO [Controller id=1] New topics: [Set(__consumer_offsets)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(__consumer_offsets,Some(jGSUcj77So28JVpHQtXvrQ),HashMap(__consumer_offsets-22 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-30 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-25 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-35 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-37 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-38 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-13 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-8 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-21 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-4 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-27 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-7 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-9 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-46 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-41 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-33 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-23 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-49 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-47 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-16 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-28 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-31 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-36 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-42 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-3 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-18 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-15 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-24 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-17 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-48 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-19 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-11 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-2 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-43 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-6 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-14 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-20 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-0 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-44 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-39 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-12 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-45 -> ReplicaAssignment(replicas=3, addingReplicas=, removingReplicas=), __consumer_offsets-1 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-5 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-26 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-29 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-34 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-10 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=), __consumer_offsets-32 -> ReplicaAssignment(replicas=2, addingReplicas=, removingReplicas=), __consumer_offsets-40 -> ReplicaAssignment(replicas=1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-16 15:12:35,700] INFO [Controller id=1] New partition creation callback for __consumer_offsets-22,__consumer_offsets-30,__consumer_offsets-25,__consumer_offsets-35,__consumer_offsets-37,__consumer_offsets-38,__consumer_offsets-13,__consumer_offsets-8,__consumer_offsets-21,__consumer_offsets-4,__consumer_offsets-27,__consumer_offsets-7,__consumer_offsets-9,__consumer_offsets-46,__consumer_offsets-41,__consumer_offsets-33,__consumer_offsets-23,__consumer_offsets-49,__consumer_offsets-47,__consumer_offsets-16,__consumer_offsets-28,__consumer_offsets-31,__consumer_offsets-36,__consumer_offsets-42,__consumer_offsets-3,__consumer_offsets-18,__consumer_offsets-15,__consumer_offsets-24,__consumer_offsets-17,__consumer_offsets-48,__consumer_offsets-19,__consumer_offsets-11,__consumer_offsets-2,__consumer_offsets-43,__consumer_offsets-6,__consumer_offsets-14,__consumer_offsets-20,__consumer_offsets-0,__consumer_offsets-44,__consumer_offsets-39,__consumer_offsets-12,__consumer_offsets-45,__consumer_offsets-1,__consumer_offsets-5,__consumer_offsets-26,__consumer_offsets-29,__consumer_offsets-34,__consumer_offsets-10,__consumer_offsets-32,__consumer_offsets-40 (kafka.controller.KafkaController)
[2022-03-16 15:16:31,248] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:16:31,252] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:16:31,257] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:16:31,257] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:16:31,258] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:16:31,258] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:16:31,258] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:16:31,258] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:21:31,259] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:21:31,260] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:21:31,264] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:21:31,264] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:21:31,264] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:21:31,265] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:21:31,265] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:21:31,265] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:22:37,774] INFO [Controller id=1] New topics: [HashSet(with_third_brokers)], deleted topics: [HashSet()], new partition replica assignment [Set(TopicIdReplicaAssignment(with_third_brokers,Some(VC3OgRtrQeiH2vx7auUCbw),Map(with_third_brokers-0 -> ReplicaAssignment(replicas=1,3,2, addingReplicas=, removingReplicas=), with_third_brokers-1 -> ReplicaAssignment(replicas=2,1,3, addingReplicas=, removingReplicas=), with_third_brokers-2 -> ReplicaAssignment(replicas=3,2,1, addingReplicas=, removingReplicas=))))] (kafka.controller.KafkaController)
[2022-03-16 15:22:37,774] INFO [Controller id=1] New partition creation callback for with_third_brokers-0,with_third_brokers-1,with_third_brokers-2 (kafka.controller.KafkaController)
[2022-03-16 15:22:37,792] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:22:37,792] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:22:37,792] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:23:52,517] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:24:22,851] DEBUG preRegister called. Server=com.sun.jmx.mbeanserver.JmxMBeanServer@24273305, name=log4j:logger=kafka.controller (kafka.controller)
[2022-03-16 15:26:31,265] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:26:31,265] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:26:31,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:26:31,269] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:26:31,269] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:26:31,270] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:26:31,270] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:26:31,270] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:31:31,270] INFO [Controller id=1] Processing automatic preferred replica leader election (kafka.controller.KafkaController)
[2022-03-16 15:31:31,271] TRACE [Controller id=1] Checking need to trigger auto leader balancing (kafka.controller.KafkaController)
[2022-03-16 15:31:31,275] DEBUG [Controller id=1] Topics not in preferred replica for broker 1 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:31:31,275] TRACE [Controller id=1] Leader imbalance ratio for broker 1 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:31:31,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 2 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:31:31,276] TRACE [Controller id=1] Leader imbalance ratio for broker 2 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:31:31,276] DEBUG [Controller id=1] Topics not in preferred replica for broker 3 HashMap() (kafka.controller.KafkaController)
[2022-03-16 15:31:31,276] TRACE [Controller id=1] Leader imbalance ratio for broker 3 is 0.0 (kafka.controller.KafkaController)
[2022-03-16 15:32:42,934] INFO [Controller id=1] Shutting down broker 1 (kafka.controller.KafkaController)
[2022-03-16 15:32:42,935] DEBUG [Controller id=1] All shutting down brokers: 1 (kafka.controller.KafkaController)
[2022-03-16 15:32:42,935] DEBUG [Controller id=1] Live brokers: 2,3 (kafka.controller.KafkaController)
[2022-03-16 15:32:42,987] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9094 (id: 3 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:32:42,987] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9092 (id: 1 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:32:42,987] INFO [RequestSendThread controllerId=1] Controller 1 connected to localhost:9093 (id: 2 rack: null) for sending state change requests (kafka.controller.RequestSendThread)
[2022-03-16 15:32:43,030] TRACE [Controller id=1] All leaders = __consumer_offsets-13 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-46 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-9 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-42 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-21 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-17 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-30 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-26 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-5 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-38 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-34 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-16 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-45 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-12 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),first_topic-1 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-41 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),third_topic-2 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-24 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-20 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-49 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-0 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-29 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-25 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-8 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-37 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),first_topic-2 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),with_third_brokers-0 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-4 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-33 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-15 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-48 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-11 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),first_topic-0 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:1),__consumer_offsets-44 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),third_topic-1 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-23 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-19 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-32 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-28 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-7 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-40 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-3 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),message-log-0 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-36 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),with_third_brokers-1 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-47 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-14 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-43 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-10 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),third_topic-0 -> (Leader:2,ISR:2,3,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-22 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-18 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-31 -> (Leader:1,ISR:1,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-27 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-39 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-6 -> (Leader:3,ISR:3,LeaderEpoch:0,ControllerEpoch:2),__consumer_offsets-35 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2),with_third_brokers-2 -> (Leader:3,ISR:3,2,LeaderEpoch:1,ControllerEpoch:2),__consumer_offsets-2 -> (Leader:2,ISR:2,LeaderEpoch:0,ControllerEpoch:2) (kafka.controller.KafkaController)
[2022-03-16 15:32:44,233] INFO [ControllerEventThread controllerId=1] Shutting down (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-16 15:32:44,235] INFO [ControllerEventThread controllerId=1] Shutdown completed (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-16 15:32:44,234] INFO [ControllerEventThread controllerId=1] Stopped (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-16 15:32:44,236] DEBUG [Controller id=1] Resigning (kafka.controller.KafkaController)
[2022-03-16 15:32:44,237] DEBUG [Controller id=1] Unregister BrokerModifications handler for Set(1, 2, 3) (kafka.controller.KafkaController)
[2022-03-16 15:32:44,238] INFO [PartitionStateMachine controllerId=1] Stopped partition state machine (kafka.controller.ZkPartitionStateMachine)
[2022-03-16 15:32:44,241] INFO [ReplicaStateMachine controllerId=1] Stopped replica state machine (kafka.controller.ZkReplicaStateMachine)
[2022-03-16 15:32:44,242] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,242] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,242] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,246] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,246] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,246] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,248] INFO [RequestSendThread controllerId=1] Shutting down (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,248] INFO [RequestSendThread controllerId=1] Stopped (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,248] INFO [RequestSendThread controllerId=1] Shutdown completed (kafka.controller.RequestSendThread)
[2022-03-16 15:32:44,251] INFO [Controller id=1] Resigned (kafka.controller.KafkaController)
[2022-03-16 15:33:18,401] INFO [ControllerEventThread controllerId=1] Starting (kafka.controller.ControllerEventManager$ControllerEventThread)
[2022-03-16 15:33:18,414] DEBUG [Controller id=1] Broker 3 has been elected as the controller, so stopping the election process. (kafka.controller.KafkaController)
